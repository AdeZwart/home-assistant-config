
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#    base_url: !secret base_url

# Text to speech
tts:
  - platform: google_translate

homeassistant:
  allowlist_external_dirs:
    - /tmp

logger:
  default: warning
  logs:
    homeassistant.components.onvif: debug

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

binary_sensor:
  - platform: stookalert
    province: !secret province

  - platform: workday
    country: NL
    workdays: [mon, tue, wed, thu, fri]
    excludes: [sat, sun]

telegram_bot:
  - platform: polling
    api_key: !secret telegram_api_key
    allowed_chat_ids:
      - !secret chat_id_andre
      - !secret chat_id_lize
      - !secret chat_id_reigeroord

notify:
  - name: telegram_andre
    platform: telegram
    chat_id: !secret chat_id_andre
  - name: telegram_lize
    platform: telegram
    chat_id: !secret chat_id_lize
  - name: telegram_reigeroord
    platform: telegram
    chat_id: !secret chat_id_reigeroord

ffmpeg:

camera:
  - platform: generic
    name: Frontdoor camera 1
    still_image_url: !secret frontdoor_ip_cam_still_image_url
    stream_source: !secret frontdoor_ip_cam_stream_source

media_player:
  - platform: lg_netcast
    host: !secret lg_ip_address
    access_token: !secret lg_access_token

influxdb:
  host: 192.168.2.100
  include:
    domains:
      - sensor

nefiteasy:
  devices:
  - serial: !secret nefit_easy_serial
    accesskey: !secret nefit_easy_accesskey
    password: !secret nefit_easy_password

pi_hole:
  host: 192.168.2.100
  name: pihole
  api_key: !secret pi_hole_api_token

vacuum:
  - platform: xiaomi_miio
    host: 192.168.2.176
    token: !secret roborock_token

monitor_docker:
  - name: Docker
    containers:
      - home-assistant
      - influxdb
      - grafana
      - portainer
      - swag
      - pihole
    rename:
      home-assistant: Home Assistant
      influxdb: InfluxDB
      grafana: Grafana
      portainer: Portainer
      swag: Secure Web Application Gateway
      pihole: Pi Hole
    monitored_conditions:
      - version
      - containers_total
      - containers_running
      - containers_paused
      - containers_stopped
      - containers_cpu_percentage
      - containers_memory
      - containers_memory_percentage
      - images
      - uptime
      - image
      - cpu_percentage
      - memory
      - memory_percentage

sensor:
  - platform: ical
    name: "Afvalkalender"
    url: "https://afvalkalender.cyclusnv.nl/ical/0497200000006797"
    maxevents: 3

  - platform: dsmr
    dsmr_version: 5

  - platform: cert_expiry
    host: !secret base_url

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: swap_use_percent
      - type: processor_use

  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "째C"
    value_template: '{{ (value | multiply(0.001)) | round(1) }}'

  - platform: buienradar
    monitored_conditions:
      - feeltemperature
      - temperature
      - windspeed
      - precipitation_forecast_average

  - platform: growatt_server
    username: !secret growatt_username
    password: !secret growatt_password

  - platform: nederlandse_spoorwegen
    api_key: !secret ns_api_key
    routes:
      - name: Bodegraven - Leiden
        from: Bdg
        to: Ledn
        time: !secret ns_bl_departure
      - name: Leiden - Bodegraven
        from: Ledn
        to: Bdg
        time: !secret ns_lb_departure
      - name: Bodegraven - Utrecht
        from: Bdg
        to: Ut
        time: !secret ns_bu_departure
      - name: Utrecht - Bodegraven
        from: Ut
        to: Bdg
        time: !secret ns_ub_departure

  - platform: template
    sensors:
      trash_0:
        friendly_name_template: '{{ state_attr(''sensor.afvalkalender_event_0'', ''name'')}}'
        value_template: "{{ as_timestamp(states.sensor.afvalkalender_event_0.attributes.start) | timestamp_custom('%d %b %Y') }}"
        icon_template: >-
            {% if 'Plastic' in state_attr('sensor.afvalkalender_event_0', 'name') %}
              mdi:sack
            {% elif 'papier' in state_attr('sensor.afvalkalender_event_0', 'name') %}
              mdi:package-variant
            {% else %}
              mdi:trash-can-outline
            {% endif %}

      trash_1:
        friendly_name_template: '{{ state_attr(''sensor.afvalkalender_event_1'', ''name'')}}'
        value_template: "{{ as_timestamp(states.sensor.afvalkalender_event_1.attributes.start) | timestamp_custom('%d %b %Y') }}"
        icon_template: >-
            {% if 'Plastic' in state_attr('sensor.afvalkalender_event_1', 'name') %}
              mdi:sack
            {% elif 'papier' in state_attr('sensor.afvalkalender_event_1', 'name') %}
              mdi:package-variant
            {% else %}
              mdi:trash-can-outline
            {% endif %}

      trash_2:
        friendly_name_template: '{{ state_attr(''sensor.afvalkalender_event_2'', ''name'')}}'
        value_template: "{{ as_timestamp(states.sensor.afvalkalender_event_2.attributes.start) | timestamp_custom('%d %b %Y') }}"
        icon_template: >-
            {% if 'Plastic' in state_attr('sensor.afvalkalender_event_2', 'name') %}
              mdi:sack
            {% elif 'papier' in state_attr('sensor.afvalkalender_event_2', 'name') %}
              mdi:package-variant
            {% else %}
              mdi:trash-can-outline
            {% endif %}

      power_direct_usage:
        friendly_name: 'Direct Power Usage'
        unique_id: 'sensor.direct_power_usage'
        unit_of_measurement: 'W'
        value_template: "{{ ((states('sensor.growatt_total_output_power') | float) - ((states('sensor.power_production') | float) * 1000)) | round(2) }}"

      nefit_temperature:
        friendly_name: 'Nefit Set temperature'
        unique_id: 'sensor.nefit_temperature'
        unit_of_measurement: '째C'
        value_template: "{{ state_attr('climate.nefit', 'temperature') }}"

      nefit_current_temperature:
        friendly_name: 'Nefit Current temperature'
        unique_id: 'sensor.nefit_current_temperature'
        unit_of_measurement: '째C'
        value_template: "{{ state_attr('climate.nefit', 'current_temperature') }}"

      office_temperature:
        friendly_name: 'Office Current temperature'
        unique_id: 'sensor.office_current_temperature'
        unit_of_measurement: '째C'
        value_template: "{{ state_attr('climate.office', 'current_temperature') }}"