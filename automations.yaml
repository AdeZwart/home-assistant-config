- id: front_door_light_evening_sun_elevation
  alias: Turn on the front door light in the evening based on the sun elevation
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: '-4.0'  
  condition:
  - condition: time
    after: '16:00:00'
    before: '22:45:00'
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: switch.turn_on
    entity_id: switch.outside    
  mode: single

- id: front_door_light_evening_timed
  alias: Turn on the front door light in the evening based on the time
  description: ''
  trigger:
  - platform: time
    at: '16:00:00'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
    - condition: numeric_state
      entity_id: sun.sun
      attribute: elevation
      below: '-4.0'
  action:    
  - service: switch.turn_on
    entity_id: switch.outside
  mode: single

- id: front_door_light_morning_timed
  alias: Turn on the front door light in the morning based on the time
  description: ''
  trigger:
  - platform: time
    at: '06:00:00'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
    - condition: numeric_state
      entity_id: sun.sun
      below: '-4.0'
      attribute: elevation
  action:
  - service: switch.turn_on
    entity_id: switch.outside
  mode: single

- id: front_door_light_morning_sun_elevation
  alias: Turn off the front door light in the morning based on the sun elevation
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    above: '-3.0'
    attribute: elevation
  action:
  - service: switch.turn_off
    entity_id: switch.outside
  mode: single

- id: front_door_light_nighttime_daytime
  alias: Turn off front door light during the night or during the day
  description: ''
  trigger:
  - platform: time
    at: '23:00:00'
  - platform: time
    at: '8:00:00'
  condition: []
  action:
  - service: switch.turn_off
    entity_id: switch.outside
  mode: single

- id: turn_on_front_door_light_when_coming_home
  alias: Turn on front door light when coming homeassistant
  trigger:
  - platform: geo_location
    source: device_tracker.sm_g973f
    zone: zone.home
    event: enter
  condition:
  - condition: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: '-3.0'    
  action:
  - service: switch.turn_on
    entity_id: switch.outside
  mode: single

- id: turn_off_office_heating_in_the_evening
  alias: Turn off office heating at 22.00
  trigger:
  - platform: time
    at: '22:00'
  action:
  - service: climate.turn_off
    entity_id: climate.office
  mode: single

- id: trash_collection_notification_day_before_0
  alias: 'Trash collection notification day before 0'
  trigger:
  - platform: time
    at: '19:30'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: >
        {% if (as_timestamp(now()) > (as_timestamp(states.sensor.afvalkalender_event_0.attributes.start) - 43200)) %}
          true
        {% endif %}
    - condition: template
      value_template: >
        {% if (as_timestamp(now()) < (as_timestamp(states.sensor.afvalkalender_event_0.attributes.start))) %}
          true
        {% endif %}
  action:
  - service: notify.telegram_andre
    data_template:
      message: '{{states.sensor.afvalkalender_event_0.attributes.name}} wordt morgen opgehaald.'
  - service: notify.telegram_lize
    data_template:
      message: '{{states.sensor.afvalkalender_event_0.attributes.name}} wordt morgen opgehaald.'
  mode: single

- id: trash_collection_notification_day_before_1
  alias: 'Trash collection notification day before 1' 
  trigger:
  - platform: time
    at: '19:30'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: >
        {% if (as_timestamp(now()) > (as_timestamp(states.sensor.afvalkalender_event_1.attributes.start) - 43200)) %}
          true
        {% endif %}
    - condition: template
      value_template: >
        {% if (as_timestamp(now()) < (as_timestamp(states.sensor.afvalkalender_event_1.attributes.start))) %}
          true
        {% endif %}
  action:
  - service: notify.telegram_andre
    data_template:
      message: '{{states.sensor.afvalkalender_event_1.attributes.name}} wordt morgen opgehaald.'
  - service: notify.telegram_lize
    data_template:
      message: '{{states.sensor.afvalkalender_event_1.attributes.name}} wordt morgen opgehaald.' 
  mode: single

- id: trash_collection_notification_working_day_0
  alias: 'Trash collection notification reminder working day 0'
  trigger:
  - platform: time
    at: '06:15'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on' 
    - condition: template
      value_template: >
        {% if (as_timestamp(now()) > (as_timestamp(states.sensor.afvalkalender_event_0.attributes.start))) %}
          true
        {% endif %}
  action:
  - service: notify.telegram_andre
    data_template:
      message: '{{states.sensor.afvalkalender_event_0.attributes.name}} wordt vandaag opgehaald!'
  - service: notify.telegram_lize
    data_template:
      message: '{{states.sensor.afvalkalender_event_0.attributes.name}} wordt vandaag opgehaald!'
  mode: single

- id: trash_collection_notification_weekend_day_0'
  alias: 'Trash collection notification reminder weekend day 0'
  trigger:
  - platform: time
    at: '07:30'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'off'
    - condition: template
      value_template: >
        {% if (as_timestamp(now()) > (as_timestamp(states.sensor.afvalkalender_event_0.attributes.start)))  %} 
          true
        {% endif  %}
  action:
  - service: notify.telegram_andre
    data_template:
      message: '{{states.sensor.afvalkalender_event_0.attributes.name}} wordt vandaag opgehaald!'
  - service: notify.telegram_lize
    data_template:
      message: '{{states.sensor.afvalkalender_event_0.attributes.name}} wordt vandaag opgehaald!'
  mode: single

- id: central_heating_pressure_low_alert
  alias: 'Central heating system pressure low alert'
  trigger:
  - platform: numeric_state
    entity_id: sensor.nefit_cv_pressure
    below: '1.5'
  action:
    - service: notify.mobile_app_sgs10_andre
      data_template:
        message: 'Low CV System pressure! Pressure at {{states.sensor.nefit_cv_pressure.state_with_unit}}!'
  mode: single

- id: central_heating_pressure_high_alert
  alias: 'Central heating system pressure high alert'
  trigger:
  - platform: numeric_state
    entity_id: sensor.nefit_cv_pressure
    above: '2.6'
  action:
    - service: notify.mobile_app_sgs10_andre
      data_template:
        message: 'High CV System pressure! Pressure at {{states.sensor.nefit_cv_pressure.state_with_unit}}!'
  mode: single

- id: set_tv_watching_ambiance
  alias: 'Set TV watching ambiance when Chromecast starts playing'
  trigger:
    - platform: state
      entity_id: media_player.blackcast
      to: playing
  action:
    - service: light.turn_on
      data: 
        entity_id: light.tv_meubel_links
        brightness_pct: 50
        color_temp: 370
    - service: light.turn_on
      data: 
        entity_id: light.tv_meubel_rechts
        brightness_pct: 50
        color_temp: 370
    - service: switch.turn_off
      entity_id: switch.livingroom_shelly_channel_1
  mode: single

- id: start_vacuuming
  alias: Start vacuuming
  trigger:
    platform: state
    entity_id: input_boolean.vacuum
    to: 'on'
  action:
    - service: vacuum.start
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
    - service: input_boolean.turn_off
      entity_id: input_boolean.vacuum
  mode: single

- id: notification_goto_trash_bin
  alias: Send vacuum to trashbin for emptying?
  trigger:
  - platform: time
    at: '20:00:00'
  condition:
    condition: time
    weekday:
      - wed
      - sat
  action:
    - service: notify.mobile_app_sgs10_andre
      data:
        message: 'Time to empty the Roborock dust bin! Do it now?'
        data:
          actions:
            - action: "start_goto_trashbin"
              title: "Yes"
            - action: "skip_goto_trashbin"
              title: "No"
            - action: "postpone_goto_trashbin"
              title: "Postpone 1h"
  mode: single

- id: goto_trash_bin
  alias: Have the vacuum report at the trashbin to empty the dust bin
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: start_goto_trashbin
  action:
    - service: xiaomi_miio.vacuum_goto
      data:
        entity_id: vacuum.xiaomi_vacuum_cleaner
        x_coord: 25500
        y_coord: 26750
  mode: single

- id: set_house_sleep_mode
  alias: House sleep mode (lights and heating off)
  trigger:
    platform: state
    entity_id: input_boolean.snooze
    to: 'on'
  action:
    - service: light.turn_off
      entity_id: light.tv_meubel_links
    - service: light.turn_off
      entity_id: light.tv_meubel_rechts
    - service: light.turn_off
      entity_id: light.tradfri_driver
    - service: light.turn_off
      entity_id: light.test_lamp
    - service: climate.turn_off
      entity_id: climate.office
    - service: media_player.turn_off
      entity_id: media_player.lg_tv_remote
    - service: switch.turn_off
      entity_id: switch.livingroom_shelly_channel_1
    - service: switch.turn_off
      entity_id: switch.livingroom_shelly_channel_2
    - service: climate.set_temperature
      data:
        entity_id: climate.nefit
        temperature: 17
    - service: input_boolean.turn_off
      entity_id: input_boolean.snooze
  mode: single

- id: system_monitor_temp_alert
  alias: 'System monitor high temperature alert'
  trigger: 
  - platform: numeric_state
    entity_id: sensor.cpu_temperature
    above: '70'
  action:
    - service: notify.mobile_app_sgs10_andre
      data_template:
        message: 'System temperature at {{states.sensor.cpu_temperature.state_with_unit}}!'
  mode: single

- id: front_door_camera_snapshot
  alias: 'Send frontdoor camera snapshot with Telegram'
  trigger:
    platform: state
    entity_id: binary_sensor.doorbell_button
    to: 'on'
  action:
    - service: camera.snapshot
      data:
        entity_id: camera.frontdoor_camera_1
        filename: /tmp/frontdoor_snapshot.jpg
    - service: notify.telegram_andre
      data: 
        title: "frontdoor snapshot"
        message: "frontdoor snapshot"
        data:
          photo:
            file: /tmp/frontdoor_snapshot.jpg
            caption: We hebben een beller!    
    - service: notify.telegram_lize
      data: 
        title: "frontdoor snapshot"
        message: "frontdoor snapshot"
        data:
          photo:
            file: /tmp/frontdoor_snapshot.jpg
            caption: We hebben een beller!  
  mode: single

- id: ns_bdg_ut_delayed
  alias: 'NS Bdg - Ut delayed'
  initial_state: false
  trigger:
  - platform: time_pattern
    minutes: "/1"
  condition:
    - condition: template
      value_template: >
        {% if state_attr('sensor.bodegraven_utrecht', 'departure_delay') == true %}
          true
        {% endif %}
  action:
  - service: notify.telegram_andre
    data_template:
      message: "{{states.sensor.bodegraven_utrecht.attributes.departure_time_actual}}"
  mode: single

- id: ns_bdg_ut_cancelled
  alias: 'NS Bdg - Ut cancelled'
  initial_state: false
  trigger:
  - platform: time_pattern
    minutes: "/1"
  condition:
  - condition: template
    value_template: >
      {% if state_attr('sensor.bodegraven_utrecht', 'going') == false %}
        true
      {% endif %}
  action:
  - service: notify.telegram_andre
    data_template:
      message: 'De trein van Bodegraven naar Utrecht van {{states.sensor.bodegraven_utrecht.attributes.departure_time_planned}} is vervallen.'
  mode: single

- id: enable_ns_bdg_ut_delay_cancelled
  alias: 'Enable NS Bdg - Ut automation'
  description: 'Enables the bdg - ut delay and cancelled automations when the state is updated from unknown'
  trigger:
    - platform: state
      entity_id: sensor.bodegraven_utrecht
      from: 'unknown'
  condition:    
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  action:
  - service: homeassistant.turn_on
    entity_id: automation.ns_bdg_ut_delayed
  - service: homeassistant.turn_on
    entity_id: automation.ns_bdg_ut_cancelled
  mode: single

- id: disable_ns_bdg_ut_delay
  alias: 'Disable NS Bdg - Ut delayed automation'
  description: 'Disables the bdg - ut delay automation and resets to all the initial values'
  trigger:
    - platform: state
      entity_id: sensor.bodegraven_utrecht
      to: 'unknown'
  action:
  - service: homeassistant.turn_off
    entity_id: automation.ns_bdg_ut_delayed
  - service: homeassistant.turn_off
    entity_id: automation.ns_bdg_ut_cancelled
  - service: input_number.set_value
    data_template:
      entity_id: input_number.train_delay_utrecht
      value: "0"
  mode: single      